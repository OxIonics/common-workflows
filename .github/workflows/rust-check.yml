name: Rust checks

on:
  workflow_call:
    inputs:
      RUN_TESTS:
        required: false
        default: true
        type: boolean
      CLIPPY_TOOLCHAIN:
        required: false
        default: ""
        type: string
      FMT_TOOLCHAIN:
        required: false
        default: ""
        type: string

jobs:
  fmt:
    name: Rustfmt
    container:
      image: ghcr.io/oxionics/poetry:1.23-py3.10
    runs-on:
      group: Default
      labels: self-hosted
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1.10.1
        with:
          toolchain: ${{ inputs.FMT_TOOLCHAIN }}
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: poe fmt-test-rs

  clippy:
    name: Clippy
    container:
      image: ghcr.io/oxionics/poetry:1.23-py3.10
    runs-on:
      group: Default
      labels: self-hosted
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1.10.1
        with:
          toolchain: ${{ inputs.CLIPPY_TOOLCHAIN }}
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - uses: giraffate/clippy-action@v1
        with:
          reporter: 'github-pr-review'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          clippy_flags: --tests --all-features -- -D warnings

  test:
    name: Test
    if: ${{ inputs.RUN_TESTS }}
    container:
      image: ghcr.io/oxionics/poetry:1.23-py3.10
    runs-on:
      group: Default
      labels: self-hosted
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1.10.1
      - uses: Swatinem/rust-cache@v2
      - run: poe test-rs
        name: Test
